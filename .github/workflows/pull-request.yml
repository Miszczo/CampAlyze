name: Pull Request Validation

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:
    inputs:
      update-snapshots:
        description: "Aktualizuj snapshoty testowe?"
        required: false
        type: boolean
        default: false

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint

  unit-tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test:unit
        env:
          SUPABASE_URL: "http://localhost:54321"
          SUPABASE_KEY: "dummy-key-for-unit-tests"

  e2e-tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # Konfiguracja cache dla snapshotów
      - name: Set up snapshot cache
        id: snapshot-cache
        uses: actions/cache@v4
        with:
          path: tests/e2e/**/*-snapshots/**
          key: snapshots-${{ runner.os }}-${{ hashFiles('tests/e2e/**/*.ts') }}
          restore-keys: |
            snapshots-${{ runner.os }}-

      # Generuj/aktualizuj snapshoty jeśli:
      # 1. Użytkownik wymusił aktualizację poprzez workflow_dispatch
      # 2. Cache nie został znaleziony (pierwsze uruchomienie lub zmiany w testach)
      - name: Update snapshots if needed
        if: ${{ github.event.inputs.update-snapshots == 'true' || steps.snapshot-cache.outputs.cache-hit != 'true' }}
        run: npx playwright test --update-snapshots
        env:
          SUPABASE_URL: ${{ secrets.E2E_SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.E2E_SUPABASE_KEY }}
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}

      # Standardowe uruchomienie testów E2E
      - name: Run E2E tests
        run: npm run test:e2e
        env:
          SUPABASE_URL: ${{ secrets.E2E_SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.E2E_SUPABASE_KEY }}
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}

      # Zapisz wyniki testów jako artefakty (zawsze, nawet przy niepowodzeniu)
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  build:
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/
          retention-days: 7
